<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.11.2" type="baseline" client="gradle" dependencies="true" name="AGP (8.11.2)" variant="all" version="8.11.2">

    <issue
        id="UnknownIssueId"
        message="Unknown issue id &quot;LeakCanary&quot;"
        errorLine1="    &lt;issue id=&quot;LeakCanary&quot; severity=&quot;error&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="lint.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="UnknownIssueId"
        message="Unknown issue id &quot;LeakCanary&quot;"
        errorLine1="    &lt;issue id=&quot;LeakCanary&quot; severity=&quot;error&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="lint.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="UnknownIssueId"
        message="Unknown issue id &quot;LeakCanary&quot;"
        errorLine1="    &lt;issue id=&quot;LeakCanary&quot; severity=&quot;error&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="lint.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="UnknownIssueId"
        message="Unknown issue id &quot;LeakCanary&quot;"
        errorLine1="    &lt;issue id=&quot;LeakCanary&quot; severity=&quot;error&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="lint.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="UnknownIssueId"
        message="Unknown issue id &quot;LeakCanary&quot;"
        errorLine1="    &lt;issue id=&quot;LeakCanary&quot; severity=&quot;error&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="lint.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="UnknownIssueId"
        message="Unknown issue id &quot;LeakCanary&quot;"
        errorLine1="    &lt;issue id=&quot;LeakCanary&quot; severity=&quot;error&quot; />"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="lint.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="MissingPermission"
        message="Call requires permission which may be rejected by user: code should explicitly check to see if permission is available (with `checkPermission`) or explicitly handle a potential `SecurityException`"
        errorLine1="        audioRecord = AudioRecord("
        errorLine2="                      ^">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/audio/AndroidAudioCapture.kt"
            line="84"
            column="23"/>
    </issue>

    <issue
        id="MissingPermission"
        message="Call requires permission which may be rejected by user: code should explicitly check to see if permission is available (with `checkPermission`) or explicitly handle a potential `SecurityException`"
        errorLine1="            val testRecord = AudioRecord("
        errorLine2="                             ^">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/audio/AndroidAudioCapture.kt"
            line="295"
            column="30"/>
    </issue>

    <issue
        id="MissingPermission"
        message="Call requires permission which may be rejected by user: code should explicitly check to see if permission is available (with `checkPermission`) or explicitly handle a potential `SecurityException`"
        errorLine1="            audioRecord = AudioRecord("
        errorLine2="                          ^">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/audio/AndroidAudioSession.kt"
            line="72"
            column="27"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="    return String.format(&quot;%d:%02d %s&quot;, if (hour == 0) 12 else hour, minute, amPm)"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatScreen.kt"
            line="517"
            column="12"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="            text = String.format(&quot;%.1f tok/s&quot;, analytics.averageTokensPerSecond),"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatScreen.kt"
            line="706"
            column="20"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="        return String.format(&quot;%.1f %s&quot;, size, units[unitIndex])"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/files/FileManager.kt"
            line="607"
            column="16"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="                bytes &lt; 1024 * 1024 -> String.format(&quot;%.1f KB&quot;, bytes / 1024.0)"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/ai/models/data/ModelInfo.kt"
            line="63"
            column="40"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="                bytes &lt; 1024 * 1024 * 1024 -> String.format(&quot;%.1f MB&quot;, bytes / (1024.0 * 1024))"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/ai/models/data/ModelInfo.kt"
            line="64"
            column="47"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="                else -> String.format(&quot;%.2f GB&quot;, bytes / (1024.0 * 1024 * 1024))"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/ai/models/data/ModelInfo.kt"
            line="65"
            column="25"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="        String.format(&quot;%.2f GB&quot;, gb)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="668"
            column="9"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="        String.format(&quot;%.0f MB&quot;, mb)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="671"
            column="9"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="            String.format(&quot;%.2f GB&quot;, gb)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelsViewModel.kt"
            line="89"
            column="13"/>
    </issue>

    <issue
        id="DefaultLocale"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        errorLine1="            String.format(&quot;%.0f MB&quot;, mb)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelsViewModel.kt"
            line="92"
            column="13"/>
    </issue>

    <issue
        id="InlinedApi"
        message="Field requires API level 26 (current min is 24): `android.os.BatteryManager#BATTERY_PROPERTY_STATUS`"
        errorLine1="        val status = batteryManager.getIntProperty(BatteryManager.BATTERY_PROPERTY_STATUS)"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/DeviceRegistrationServiceAndroid.kt"
            line="227"
            column="52"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in io.ktor:ktor-utils-jvm; not included in Android: `java.lang.management`. Referenced from `io.ktor.util.debug.IntellijIdeaDebugDetector`.">
        <location
            file="../../../../../.gradle/caches/modules-2/files-2.1/io.ktor/ktor-utils-jvm/3.0.3/8938221fdf8253200824443515b7a2bef4d09d3/ktor-utils-jvm-3.0.3.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in library; not included in Android: `java.lang.management`. Referenced from `io.ktor.util.debug.IntellijIdeaDebugDetector`.">
        <location
            file="../../../../../../../.gradle/caches/modules-2/files-2.1/io.ktor/ktor-utils-jvm/3.0.3/8938221fdf8253200824443515b7a2bef4d09d3/ktor-utils-jvm-3.0.3.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in library; not included in Android: `java.lang.management`. Referenced from `io.ktor.util.debug.IntellijIdeaDebugDetector`.">
        <location
            file="../../../../../../../.gradle/caches/modules-2/files-2.1/io.ktor/ktor-utils-jvm/3.0.3/8938221fdf8253200824443515b7a2bef4d09d3/ktor-utils-jvm-3.0.3.jar"/>
    </issue>

    <issue
        id="SdCardPath"
        message="Do not hardcode &quot;`/data/`&quot;; use `Context.getFilesDir().getPath()` instead"
        errorLine1="    return &quot;/data/data/com.runanywhere.runanywhereai/files&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/models/ModelStorage.kt"
            line="23"
            column="13"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`decodeFromString` is defined both as a member in class `kotlinx.serialization.json.Json` and an extension in package `kotlinx.serialization`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="                val loaded = json.decodeFromString&lt;Conversation>(jsonString)"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="159"
            column="30"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`decodeFromString` is defined both as a member in class `kotlinx.serialization.json.Json` and an extension in package `kotlinx.serialization`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="                    json.decodeFromString&lt;Conversation>(jsonString)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="208"
            column="21"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`encodeToString` is defined both as a member in class `kotlinx.serialization.json.Json` and an extension in package `kotlinx.serialization`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="            val jsonString = json.encodeToString(conversation)"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="230"
            column="30"/>
    </issue>

    <issue
        id="AndroidGradlePluginVersion"
        message="A newer version of Gradle than 8.13 is available: 8.14.3"
        errorLine1="distributionUrl=https\://services.gradle.org/distributions/gradle-8.13-bin.zip"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="../gradle/wrapper/gradle-wrapper.properties"
            line="4"
            column="17"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of `compileSdkVersion` than 35 is available: 36"
        errorLine1="    compileSdk = 35"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="build.gradle.kts"
            line="125"
            column="5"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="    modifier: Modifier = Modifier"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/components/MessageInput.kt"
            line="26"
            column="5"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;ChatViewModel&quot;, &quot;🎯 sendMessage() called&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="97"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i("
        errorLine2="        ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="98"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.w(&quot;ChatViewModel&quot;, &quot;Cannot send message - canSend is false&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="104"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;ChatViewModel&quot;, &quot;✅ canSend is true, proceeding&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="108"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;ChatViewModel&quot;, &quot;🎯 Sending message: ${prompt.take(50)}...&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="111"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;ChatViewModel&quot;, &quot;📤 Starting streaming generation&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="176"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                        Log.i(&quot;ChatViewModel&quot;, &quot;🧠 Entering thinking mode&quot;)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="203"
            column="25"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                                Log.i(&quot;ChatViewModel&quot;, &quot;🧠 Exiting thinking mode&quot;)"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="218"
            column="33"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;ChatViewModel&quot;, &quot;Streaming failed&quot;, e)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="241"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.w(&quot;ChatViewModel&quot;, &quot;⚠️ Stream ended while in thinking mode&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="250"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;ChatViewModel&quot;, &quot;✅ Streaming generation completed&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="292"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.e(&quot;ChatViewModel&quot;, &quot;❌ Generation failed&quot;, error)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="336"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    Log.i("
        errorLine2="                    ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="545"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                        Log.i("
        errorLine2="                        ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="559"
            column="25"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                        Log.e(&quot;ChatViewModel&quot;, &quot;❌ Failed to load model: ${e.message}&quot;, e)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="564"
            column="25"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    Log.i(&quot;ChatViewModel&quot;, &quot;ℹ️ No downloaded models found&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="576"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(&quot;ChatViewModel&quot;, &quot;❌ SDK not ready&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="594"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;ChatViewModel&quot;, &quot;Failed to check model status&quot;, e)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="597"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i("
        errorLine2="            ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="623"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.e(&quot;ConversationStore&quot;, &quot;Failed to load conversation from disk&quot;, e)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="166"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    Log.e(&quot;ConversationStore&quot;, &quot;Failed to load conversation: ${file.name}&quot;, e)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="210"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;ConversationStore&quot;, &quot;Failed to load conversations&quot;, e)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="220"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;ConversationStore&quot;, &quot;Failed to save conversation&quot;, e)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/data/ConversationStore.kt"
            line="233"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionSheet&quot;, &quot;🔍 Filtering models for framework: ${uiState.expandedFramework}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="140"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionSheet&quot;, &quot;📦 Total models: ${uiState.models.size}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="141"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionSheet&quot;, &quot;✅ Filtered models: ${filteredModels.size}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="142"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                        android.util.Log.d(&quot;ModelSelectionSheet&quot;, &quot;   - ${model.name} (${model.compatibleFrameworks.map { it.displayName }})&quot;)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="144"
            column="25"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔄 Loading models and frameworks...&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="50"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📦 Fetched ${models.size} models from SDK&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="54"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔍 LLM Providers registered: ${llmProviders.size}&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="60"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - ${provider.name}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="62"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;     framework enum: ${provider.framework}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="63"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;     displayName: ${provider.framework.displayName}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="64"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;✅ Loaded ${models.size} models and ${frameworks.size} frameworks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="80"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📦 Frameworks: $frameworks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="81"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📋 Model ${index + 1}: ${model.name}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="85"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - ID: ${model.id}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="86"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - Compatible Frameworks (enum): ${model.compatibleFrameworks}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="87"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - Compatible Frameworks (displayName): ${model.compatibleFrameworks.map { it.displayName }}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="88"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🎉 UI state updated successfully&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="100"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.e(&quot;ModelSelectionVM&quot;, &quot;❌ Failed to load models: ${e.message}&quot;, e)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="103"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔀 Toggling framework: $framework&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="116"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   Expanded framework now: ${_uiState.value.expandedFramework}&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="122"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;⬇️ Starting download for model: $modelId&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="131"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📊 Download progress: $progressPercent%&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="144"
            column="21"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;✅ Download complete for $modelId&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="153"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔄 Refreshing models list to get updated localPath...&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="159"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                android.util.Log.e(&quot;ModelSelectionVM&quot;, &quot;❌ Download failed for $modelId: ${e.message}&quot;, e)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="170"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔄 Loading model into memory: $modelId&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="188"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;✅ Model loaded successfully: $modelId&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="201"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            android.util.Log.e(&quot;ModelSelectionVM&quot;, &quot;❌ Failed to load model $modelId: ${e.message}&quot;, e)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="215"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.w(TAG, &quot;Cannot generate quiz - invalid state&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(TAG, &quot;Generating quiz from ${inputText.length} characters&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="78"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(TAG, &quot;Quiz generated successfully with ${session.questions.size} questions&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="112"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.e(TAG, &quot;Quiz generation failed&quot;, e)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="115"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(TAG, &quot;Failed to parse quiz JSON: $jsonText&quot;, e)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="174"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.e(TAG, &quot;Failed to check model status&quot;, e)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="396"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;RunAnywhereApp&quot;, &quot;🏁 App launched, initializing SDK...&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🎯 Starting SDK initialization...&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(&quot;RunAnywhereApp&quot;, &quot;🛠️ Using DEVELOPMENT mode - No API key required!&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="47"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(&quot;RunAnywhereApp&quot;, &quot;🚀 Using PRODUCTION mode&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="50"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ SDK initialized in DEVELOPMENT mode&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="63"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ SDK initialized in PRODUCTION mode&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="82"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="                Log.i(&quot;RunAnywhereApp&quot;, &quot;📡 Models will be fetched from backend console via API&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="85"
            column="17"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ SDK successfully initialized!&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="89"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;⏱️  Initialization time: ${initTime}ms&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="90"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🎯 SDK Status: Active=${RunAnywhere.isInitialized}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="91"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🔧 Environment: ${environment.name}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="92"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i("
        errorLine2="            ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="93"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i("
        errorLine2="            ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="97"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;💡 Models registered, user can now download and select models&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="105"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;RunAnywhereApp&quot;, &quot;❌ SDK initialization failed!&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="108"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;RunAnywhereApp&quot;, &quot;🔍 Error: ${e.message}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="109"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;RunAnywhereApp&quot;, &quot;💡 Tip: Check your API key and network connection&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="110"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;RunAnywhereApp&quot;, &quot;🔧 Registering Service Providers for DEVELOPMENT mode&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="124"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered LlamaCppServiceProvider&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="129"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🎉 All service providers registered successfully&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="134"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;RunAnywhereApp&quot;, &quot;❌ Failed to register service providers: ${e.message}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="137"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="        Log.i(&quot;RunAnywhereApp&quot;, &quot;📦 Registering models for DEVELOPMENT mode&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="146"
            column="9"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: SmolLM2 360M Q8_0&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="158"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: Qwen 2.5 0.5B Instruct Q6_K&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="166"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: Llama 3.2 1B Instruct Q6_K&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="174"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: QWEN 2 0.5B Instruct Q6_K Q4_0&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="183"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: SmolLM2 1.7B Instruct Q6_K_L&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="191"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: Qwen 2.5 1.5B Instruct Q6_K&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="199"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: LiquidAI LFM2 350M Q4_K_M&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="207"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ Registered: LiquidAI LFM2 350M Q8_0&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="215"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i("
        errorLine2="            ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="217"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🔍 Scanning for previously downloaded models...&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="223"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;✅ File system scan complete&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="225"
            column="13"/>
    </issue>

    <issue
        id="LogNotTimber"
        message="Using &apos;Log&apos; instead of &apos;Timber&apos;"
        errorLine1="            Log.e(&quot;RunAnywhereApp&quot;, &quot;❌ Failed to register models: ${e.message}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="232"
            column="13"/>
    </issue>

    <issue
        id="ChromeOsAbiSupport"
        message="Missing x86_64 ABI support for ChromeOS"
        errorLine1="            abiFilters += listOf(&quot;arm64-v8a&quot;)"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle.kts"
            line="67"
            column="27"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="                if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/audio/AndroidAudioCapture.kt"
            line="359"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        supportsVulkan = Build.VERSION.SDK_INT >= 24,"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/deviceinfo/DeviceInfoActual.kt"
            line="49"
            column="26"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        return hasFeature(&quot;android.hardware.vulkan.level&quot;) &amp;&amp; Build.VERSION.SDK_INT >= 24"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/deviceinfo/DeviceInfoService.kt"
            line="384"
            column="63"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/deviceinfo/DeviceInfoService.kt"
            line="431"
            column="20"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/DeviceRegistrationServiceAndroid.kt"
            line="189"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/DeviceRegistrationServiceAndroid.kt"
            line="236"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/DeviceRegistrationServiceAndroid.kt"
            line="341"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/data/network/NetworkChecker.kt"
            line="32"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/data/network/NetworkChecker.kt"
            line="50"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/utils/PlatformUtils.kt"
            line="126"
            column="20"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="    val totalSpace = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/platform/StoragePlatform.android.kt"
            line="18"
            column="26"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 24"
        errorLine1="    val availableSpace = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/platform/StoragePlatform.android.kt"
            line="25"
            column="30"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="Do not place Android context classes in static fields (static reference to `FileManager` which has field `context` pointing to `Context`); this is a memory leak"
        errorLine1="        private var instance: FileManager? = null"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/files/FileManager.kt"
            line="542"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="Do not place Android context classes in static fields (static reference to `KeychainManager` which has field `context` pointing to `Context`); this is a memory leak"
        errorLine1="        @Volatile"
        errorLine2="        ^">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/KeychainManager.kt"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="Do not place Android context classes in static fields (static reference to `DatabaseManager` which has field `context` pointing to `Context`); this is a memory leak"
        errorLine1="        val shared: DatabaseManager = DatabaseManager()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/data/database/RunAnywhereDatabase.kt"
            line="95"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="Do not place Android context classes in static fields (static reference to `AndroidSecureStorage` which has field `context` pointing to `Context`); this is a memory leak"
        errorLine1="        private var cachedStorage: AndroidSecureStorage? = null"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="24"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="Do not place Android context classes in static fields; this is a memory leak"
        errorLine1="        private var context: Context? = null"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        message="This field leaks a context object"
        errorLine1="    private val context: Context = application.applicationContext"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/voice/VoiceAssistantViewModel.kt"
            line="35"
            column="5"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="        Log.i("
        errorLine2="        ^">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="98"
            column="9"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="        Log.i(&quot;ChatViewModel&quot;, &quot;🎯 Sending message: ${prompt.take(50)}...&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/chat/ChatViewModel.kt"
            line="111"
            column="9"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                        android.util.Log.d(&quot;ModelSelectionSheet&quot;, &quot;   - ${model.name} (${model.compatibleFrameworks.map { it.displayName }})&quot;)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionBottomSheet.kt"
            line="144"
            column="25"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📦 Fetched ${models.size} models from SDK&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="54"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔍 LLM Providers registered: ${llmProviders.size}&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="60"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - ${provider.name}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="62"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;     framework enum: ${provider.framework}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="63"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;     displayName: ${provider.framework.displayName}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="64"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;✅ Loaded ${models.size} models and ${frameworks.size} frameworks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="80"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📦 Frameworks: $frameworks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="81"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📋 Model ${index + 1}: ${model.name}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="85"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - ID: ${model.id}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="86"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - Compatible Frameworks (enum): ${model.compatibleFrameworks}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="87"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   - Compatible Frameworks (displayName): ${model.compatibleFrameworks.map { it.displayName }}&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="88"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="        android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔀 Toggling framework: $framework&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="116"
            column="9"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="        android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;   Expanded framework now: ${_uiState.value.expandedFramework}&quot;)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="122"
            column="9"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;⬇️ Starting download for model: $modelId&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="131"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                    android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;📊 Download progress: $progressPercent%&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="144"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;✅ Download complete for $modelId&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="153"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="            android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;🔄 Loading model into memory: $modelId&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="188"
            column="13"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="            android.util.Log.d(&quot;ModelSelectionVM&quot;, &quot;✅ Model loaded successfully: $modelId&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/models/ModelSelectionViewModel.kt"
            line="201"
            column="13"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                Log.i(TAG, &quot;Generating quiz from ${inputText.length} characters&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="78"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="                Log.i(TAG, &quot;Quiz generated successfully with ${session.questions.size} questions&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizViewModel.kt"
            line="112"
            column="17"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;⏱️  Initialization time: ${initTime}ms&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="90"
            column="13"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🎯 SDK Status: Active=${RunAnywhere.isInitialized}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="91"
            column="13"/>
    </issue>

    <issue
        id="LogConditional"
        message="The log call Log.i(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        errorLine1="            Log.i(&quot;RunAnywhereApp&quot;, &quot;🔧 Environment: ${environment.name}&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/RunAnywhereApplication.kt"
            line="92"
            column="13"/>
    </issue>

    <issue
        id="AutoboxingStateCreation"
        message="Prefer `mutableFloatStateOf` instead of `mutableStateOf`"
        errorLine1="    var rotation by remember { mutableStateOf(0f) }"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/runanywhere/runanywhereai/presentation/quiz/QuizScreen.kt"
            line="265"
            column="32"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.purple_200` appears to be unused"
        errorLine1="    &lt;color name=&quot;purple_200&quot;>#FFBB86FC&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.purple_500` appears to be unused"
        errorLine1="    &lt;color name=&quot;purple_500&quot;>#FF6200EE&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.purple_700` appears to be unused"
        errorLine1="    &lt;color name=&quot;purple_700&quot;>#FF3700B3&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.teal_200` appears to be unused"
        errorLine1="    &lt;color name=&quot;teal_200&quot;>#FF03DAC5&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.teal_700` appears to be unused"
        errorLine1="    &lt;color name=&quot;teal_700&quot;>#FF018786&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.black` appears to be unused"
        errorLine1="    &lt;color name=&quot;black&quot;>#FF000000&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        message="The resource `R.color.white` appears to be unused"
        errorLine1="    &lt;color name=&quot;white&quot;>#FFFFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/res/values/colors.xml"
            line="9"
            column="12"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `getModelsDir` of class `FileManager` requires synthetic accessor"
        errorLine1="            get() = shared.modelsDir.absolutePath"
        errorLine2="                           ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/files/FileManager.kt"
            line="548"
            column="28"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `getCacheDir` of class `FileManager` requires synthetic accessor"
        errorLine1="            get() = shared.cacheDir.absolutePath"
        errorLine2="                           ~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/files/FileManager.kt"
            line="551"
            column="28"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        message="Access to `private` method `getTempDir` of class `FileManager` requires synthetic accessor"
        errorLine1="            get() = shared.tempDir.absolutePath"
        errorLine2="                           ~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/files/FileManager.kt"
            line="554"
            column="28"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        sharedPreferences.edit().putString(key, value).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/storage/AndroidPlatformStorage.kt"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        sharedPreferences.edit().putBoolean(key, value).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/storage/AndroidPlatformStorage.kt"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        sharedPreferences.edit().putLong(key, value).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/storage/AndroidPlatformStorage.kt"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        sharedPreferences.edit().putInt(key, value).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/storage/AndroidPlatformStorage.kt"
            line="38"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        sharedPreferences.edit().remove(key).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/storage/AndroidPlatformStorage.kt"
            line="46"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        sharedPreferences.edit().clear().apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/storage/AndroidPlatformStorage.kt"
            line="50"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            prefs.edit().putString(&quot;device_id&quot;, deviceId).apply()"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/services/deviceinfo/DeviceInfoService.kt"
            line="290"
            column="13"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            with(encryptedPrefs.edit()) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/KeychainManager.kt"
            line="71"
            column="18"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            with(encryptedPrefs.edit()) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/KeychainManager.kt"
            line="124"
            column="18"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            with(encryptedPrefs.edit()) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/KeychainManager.kt"
            line="161"
            column="18"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            prefs.edit().putString(DEVICE_ID_KEY, deviceId).apply()"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/utils/PlatformUtils.kt"
            line="58"
            column="13"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        encryptedPrefs.edit().putString(key, value).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/utils/PlatformUtils.kt"
            line="150"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        encryptedPrefs.edit().remove(key).apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/utils/PlatformUtils.kt"
            line="158"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="        encryptedPrefs.edit().clear().apply()"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/utils/PlatformUtils.kt"
            line="162"
            column="9"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            encryptedPrefs.edit()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="87"
            column="13"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            encryptedPrefs.edit()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="114"
            column="13"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            encryptedPrefs.edit()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="142"
            column="13"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            encryptedPrefs.edit().clear().apply()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="164"
            column="13"/>
    </issue>

    <issue
        id="UseKtx"
        message="Use the KTX extension function `SharedPreferences.edit` instead?"
        errorLine1="            encryptedPrefs.edit().remove(testKey).apply()"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/com/runanywhere/sdk/security/SecureStorage.kt"
            line="190"
            column="13"/>
    </issue>

</issues>
